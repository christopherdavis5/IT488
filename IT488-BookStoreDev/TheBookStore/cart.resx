<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>